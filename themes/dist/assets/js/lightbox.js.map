{"version":3,"file":"/assets/js/lightbox.js","mappings":"giCACA,SAASA,EAAGC,EAAUC,EAAWC,GAC7BC,SAASC,iBAAiBH,GAAW,SAACI,GAGlC,IAFA,IAAIC,EAAUD,EAAME,OAEbD,GAAS,CACZ,GAAIA,EAAQE,QAAQR,GAChB,OAAOE,EAAG,CACNO,UAAWH,EAASI,cAAeL,IAG3CC,EAAUA,EAAQK,aACtB,CACJ,GACJ,CAEAC,OAAOR,iBAAiB,QAAQ,WAE5BL,EAAG,wBAAyB,SAAS,SAAUM,GAE3C,IAAMQ,EAAYV,SAASW,iBAAiB,sBAC5CC,QAAQC,IAAIX,GAAM,IAESY,EAFTC,EAAAC,EAEAN,GAAS,IAA3B,IAAAK,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAA6B,KAAlBC,EAAGN,EAAAO,MAEJC,EAAWF,EAAIT,iBAAiB,oCAClBS,EAAIG,aAAa,SAErBC,MAAM,oBAClBJ,EAAIK,UAAUC,OAAO,kBACrBN,EAAIK,UAAUE,IAAI,yBAGtBf,QAAQC,MAEJH,GAAaY,IACbpB,EAAMK,cAAcH,OAAOI,cAAciB,UAAUC,OAAO,wBAC1DxB,EAAMK,cAAcH,OAAOI,cAAciB,UAAUE,IAAI,kBAE/D,CAAC,OAAAC,GAAAb,EAAAc,EAAAD,EAAA,SAAAb,EAAAe,GAAA,CACL,IAEAlC,EAAG,UAAW,SAAS,SAAUM,GAEZF,SAAS+B,eAAe,YAChCN,UAAUE,IAAI,UAEvB,IAAIK,EAAK9B,EAAMI,UAAUiB,aAAa,WACtCS,EAAKC,SAASD,GAEd,IAAME,EAAkB,WACP,IAAIC,OAAO,2BAA4B,CAChDC,KAAM,OAAQC,OAAQ,OAAQC,MAAO,OAAQC,OAAQ,OAAQC,YAAY,EAAOC,MAAOT,IAIpFU,OACX,EAEAR,IAEIzB,OAAOkC,KACPlC,OAAOkC,IAAIC,UAAU,0CAA2CV,EAIxE,IAIAtC,EAAG,aAAc,SAAS,SAAUM,GAGhCA,EAAMK,cAAcH,OAAOI,cAAciB,UAAUC,OAAO,SAE9D,GAGJ,G","sources":["webpack://wifi/./themes/src/assets/js/lightbox.js"],"sourcesContent":["\r\nfunction on(selector, eventType, cb) {\r\n    document.addEventListener(eventType, (event) => {\r\n        let element = event.target;\r\n\r\n        while (element) {\r\n            if (element.matches(selector)) {\r\n                return cb({\r\n                    handleObj: element, originalEvent: event\r\n                })\r\n            }\r\n            element = element.parentElement;\r\n        }\r\n    })\r\n}\r\n\r\nwindow.addEventListener('load', function () {\r\n\r\n    on('.lightbox-small-boxes', 'click', function (event) {\r\n\r\n        const allImages = document.querySelectorAll('.is-active .select')\r\n        console.log(event)\r\n\r\n        for (const img of allImages) {\r\n\r\n            const imgClass = img.querySelectorAll('.is-active .lightbox-small-boxes')\r\n            const imgSelector = img.getAttribute('class')\r\n\r\n            if (imgSelector.match('detail-img-big')) {\r\n                img.classList.remove('detail-img-big')\r\n                img.classList.add('lightbox-small-boxes')\r\n            }\r\n\r\n            console.log()\r\n\r\n            if (allImages && imgClass) {\r\n                event.originalEvent.target.parentElement.classList.remove('lightbox-small-boxes')\r\n                event.originalEvent.target.parentElement.classList.add('detail-img-big')\r\n            }\r\n        }\r\n    })\r\n\r\n    on('.column', 'click', function (event) {\r\n\r\n        const lightbox = document.getElementById('lightbox');\r\n        lightbox.classList.add('select');\r\n\r\n        let id = event.handleObj.getAttribute('data-id');\r\n        id = parseInt(id)\r\n\r\n        const sliderInitalize = function () {\r\n            var splide = new Splide('.splide-lightbox .splide', {\r\n                type: 'loop', height: '95vh', width: '90vw', easing: 'ease', pagination: false, start: id\r\n\r\n            });\r\n\r\n            splide.mount();\r\n        }\r\n\r\n        sliderInitalize();\r\n\r\n        if (window.acf) {\r\n            window.acf.addAction('render_block_preview/type=carousel-auto', sliderInitalize)\r\n        }\r\n\r\n\r\n    })\r\n\r\n\r\n    //close lightbox (Galerie und CPT)\r\n    on('#close-btn', 'click', function (event) {\r\n\r\n        //const close = document.getElementById('close-btn')\r\n        event.originalEvent.target.parentElement.classList.remove('select')\r\n\r\n    })\r\n\r\n\r\n})\r\n"],"names":["on","selector","eventType","cb","document","addEventListener","event","element","target","matches","handleObj","originalEvent","parentElement","window","allImages","querySelectorAll","console","log","_step","_iterator","_createForOfIteratorHelper","s","n","done","img","value","imgClass","getAttribute","match","classList","remove","add","err","e","f","getElementById","id","parseInt","sliderInitalize","Splide","type","height","width","easing","pagination","start","mount","acf","addAction"],"sourceRoot":""}